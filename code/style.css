/* reset */

*,
::before,
::after {
	box-sizing: border-box;
	background-repeat: no-repeat;
	margin: 0;
	padding: 0;
	font-size: 100%;
	vertical-align: baseline; /* consider middle */
	font-family: inherit;
	color: inherit;
	line-height: 1;
}

[hidden] {
	display: none !important;
}

::before,
::after {
	text-decoration: inherit;
	vertical-align: inherit;
}

:where(:root) {
	line-height: 1;
	overflow-wrap: break-word;
	tab-size: 4;
}

p {
	line-height: 1.5;
}

:where(ol, ul) {
	list-style-type: none;
}

ol, ul {
	display: flex;
	flex-flow: column nowrap;
	row-gap: 0.5rem;
}

li {
	display: flex;
	align-items: center;
}

:where(pre) {
	font-family: monospace;
	font-size: 1rem;
	overflow: auto;
}

:where(audio, canvas, iframe, img, svg, video) {
	vertical-align: middle;
}

:where(svg:not([fill])) {
	fill: currentColor;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
}

a:active, a:hover, a:focus {
	color: inherit;
}

/* better defaults */

body {
	min-height: 100vh;
	min-height: 100svh;
	font-family: system-ui, sans-serif;
}

main {
	padding: 1rem;
}

/* tools */

.container {
	max-width: 60rem;
	margin-inline: auto;
}

.breakout {
	margin-left: calc(-50vw + 50%);
	margin-right: calc(-50vw + 50%);
}

.row {
	display: flex;
	flex-flow: row nowrap;
	gap: 1rem;
	align-items: flex-start;
}

.row.center {
	justify-content: center;
}

.row.fill > * {
	flex: 1 1 auto;
}

.row.space-evenly {
	justify-content: space-evenly;
}

.col {
	display: flex;
	flex-flow: row nowrap;
	gap: 1rem;
	align-items: flex-start;
}

.col.center {
	align-items: center;
}

.wrap {
	flex-wrap: wrap;
}

/* house style */

:root {

	--light-green: rgb(169, 214, 188);
	--lavender: rgb(173, 132, 245);
	--dim-lavender: rgb(114, 85, 181);
	--dark-lavender: rgb(85, 32, 161);

	--background-color: #eee;
	--text-color: #222;
	--card-background-color: #bbb;

	--interactive-color: var(--lavender);
	--interactive-color-dim: var(--dim-lavender);
	--interactive-color-dark: var(--dark-lavender);
}

/*
@media screen and (prefers-color-scheme: dark) {
	:root {
		--background-color: #000;
		--text-color: #eee;
		--card-background-color: #222;
	}
}
*/

body {
	background-color: var(--background-color);
	color: var(--text-color);
}

section, .card {
	background-color: var(--card-background-color);
	padding: 1rem;
	border-radius: 0.5rem;
}

a {
	text-decoration: none;
}

a:not(.button) {
	color: var(--interactive-color-dim);
}

a:not(.button):hover {
	color: var(--text-color);
}

a[target="_blank"]::after {
	content: '';
	display: inline-block;
	margin-left: 0.25em;
	width: 0.875em;
	height: 0.875em;
	background-color: currentColor;
	-webkit-mask: url(/images/external-link.svg) no-repeat 100% 100%;
	mask: url(/images/external-link.svg) no-repeat 100% 100%;
	-webkit-mask-size: cover;
	mask-size: cover;
	margin-bottom: -0.05em;
}

button,
a.button {
	padding-inline: 1.5em;
	margin-top: 0.175rem;
	border-radius: 0.25rem;
	/*height: calc(2em + 0.25rem - 0.175rem);
	*/
	text-align: top;
	background-color: var(--interactive-color-dim);
	border: 0px solid var(--interactive-color-dim);
	position: relative;
	display: flex;
	padding-top: calc(0.5em - 0.25rem);
	padding-bottom: calc(0.5em + 0.25rem);
	cursor: pointer;
	isolation: isolate;
	transition: padding-top 0.05s linear, padding-bottom 0.05s linear;
	/*
	transition: margin-top 0.05s linear, margin-bottom 0.0357s linear 0.0143s, padding-bottom 0.0143s linear;
	linear stops are not yet supported, this is equivalent to button_indent in reverse, and interruptable
	transition: box-shadow 1s linear(0, 0.412 50%, 1),
		margin-bottom 0.5s linear,
		margin-top 1s linear(0, 0.286 50%, 1),
		padding-bottom 0.5s linear 0.5s;
	*/
	/*transition: margin-top 1s ease-in, margin-bottom 0.5s linear 0.5s, box-shadow 1s ease-in, padding 0.5s;
	
	animation: 0.05s linear button_popup;
	box-shadow: 0 0.25rem 0 0 var(--interactive-color-dim);
	*/
}

button::before,
a.button::before {
	content: '';
	z-index: -1;
	position: absolute;
	background-color: var(--interactive-color);
	border: 1px solid var(--interactive-color-dim);
	border-radius: 0.25rem;
	inset: -0.175rem 0 0.25rem 0;
	transition: top 0.05s linear, bottom 0.0357s linear 0.0143s;
	/*
	transition: top 0.0357s linear 0.0143s, bottom 0.0357s linear 0.0143s, transform 0.0143s linear;
	*/
}

button:active,
a.button:active {
	color: inherit;
	padding-top: calc(0.5em + 0.1rem);
	padding-bottom: calc(0.5em - 0.1rem);
	transition: padding-top 0.1s linear, padding-bottom 0.1s linear;

	/* box-shadow: 0 -0.175rem 0 0 var(--interactive-color-dim);
	transition: margin-top 0.1s linear, margin-bottom 0.0714s linear, padding-bottom 0.0286s linear 0.0714s;
	
	margin-top: 0.35rem;
	margin-bottom: 0;
	animation: button_indent 0.1s linear;
	animation-direction: forward;
	animation-fill-mode: forwards;
	*/
}

button:active::before,
a.button:active::before {
	top: 0.175rem;
	bottom: 0;
	transition: top 0.1s linear, bottom 0.0714s linear;
	/*
	transition: top 0.0714s linear, bottom 0.0714s linear, transform 0.0286s linear 0.0714s;
	*/
}

@keyframes button_indent {
	0% {
		box-shadow: 0 0.25rem 0 0 var(--interactive-color-dim), 0 0 0 0 var(--interactive-color-dim);
		padding-bottom: 0.5em;
		margin-bottom: 0.25rem;
		margin-top: 0;
	}
	20% {
		box-shadow: 0 0.15rem 0 0 var(--interactive-color-dim), 0 0 0 0 var(--interactive-color-dim);
		padding-bottom: 0.5em;
		margin-bottom: 0.15rem;
		margin-top: 0.1rem;
	}
	50% {
		box-shadow: 0 0 0 0 var(--interactive-color-dim), 0 -0.075rem 0 0 var(--interactive-color-dim);
		padding-bottom: 0.5em;
		margin-top: 0.25rem;
		margin-bottom: 0;
	}
	100% {
		box-shadow: 0 0 0 0 var(--interactive-color-dim), 0 -0.175rem 0 0 var(--interactive-color-dim);
		padding-bottom: calc(0.5em - 0.1rem);
		margin-top: 0.35rem;
		margin-bottom: 0;
	}
}

button:hover::before,
a.button:hover::before {
	border: 1px solid currentcolor;
}

button.icon,
a.button.icon {
	padding-inline: 0.6em;
	aspect-ratio: 1 / 1;
}
/*
button.icon:active,
a.button.icon:active {
	padding-bottom: 0.3rem;
}
*/

button img,
a.button img {
	display: block;
	height: 1rem;
	width: 1rem;
	object-fit: contain;
}

button.round,
a.button.round,
button.round::before,
a.button.round::before {
	border-radius: 1em;
}

button.icon.round,
a.button.icon.round,
button.icon.round::before,
a.button.icon.round::before {
	border-radius: 50%;
}



/* nitpicking
button::after,
a.button::after {
	content: '';
	height: 0.25rem;
	background-color: var(--interactive-color-dim);
	right: -1px;
	top: 50%;
	display: block;
	width: 0.75px;
	position: absolute;
}

button:active::after,
a.button:active::after {
	transform: translateY(-.3rem);
}
*/

label {
	display: inline-flex;
	align-items: center;
}

input[type=checkbox] {
	width: 3rem;
	height: 1.5rem;
	margin-right: 0.5rem;
	margin-top: 0.2rem;
	-webkit-appearance: none;
	appearance: none;
	position: relative;
	cursor: pointer;
}

input[type=checkbox]::before {
	content: '';
	width: 2.75rem;
	height: 1.5rem;
	background: grey;
	background: linear-gradient(to right, var(--interactive-color) 0 50%, rgba(0,0,0, 0.2) 50% 100%);
	background-size: 200% 100%;
	background-position-x: 80%;
	display: block;
	border-radius: 1.5rem;
	position: absolute;
	left: 0;
	top: 0;
	border: 1px solid var(--interactive-color-dim);
	transition: 0.2s ease-out;
}

input[type=checkbox]:checked::before {
	background-position-x: 20%;
}

input[type=checkbox]::after {
	content: '';
	position: absolute;
	top: -0.2rem;
	left: 0rem;
	width: 1.5rem;
	height: 1.5rem;
	background-color: var(--interactive-color);
	border-radius: 0.75rem;
	box-shadow: 0 0.2rem 0 0 var(--interactive-color-dim);
	border: 1px solid var(--interactive-color-dim);
	transition: left 0.2s ease-out;
}

input[type=checkbox]:hover::after {
	border: 1px solid var(--text-color);
}

input[type=checkbox]:checked::after {
	left: 1.25rem;
}


input[type=radio] {
	width: 1.5rem;
	height: 1.525rem;
	margin-right: 0.5rem;
	-webkit-appearance: none;
	appearance: none;
	position: relative;
	cursor: pointer;
	display: inline-block;
}

input[type=radio]::before {
	content: "";
	height: 1.425rem;
	width: 1.5rem;
	border-radius: 50%;
	background-color: var(--interactive-color-dim);
	position: absolute;
	top: 0.125rem;
	display: block;
}

input[type=radio]::after {
	content: "";
	height: 1.375rem;
	width: 1.5rem;
	border-radius: 50%;
	background-color: var(--interactive-color);
	border: 1px solid var(--interactive-color-dim);
	position: absolute;
	top: 0;
	display: block;
	transition: top 0.1s linear 0.05s, height 0.07s linear 0.05s;
}

input[type=radio]:checked::after,
input[type=radio]:active::after {
	pointer-events: none;
	top: 0.3rem;
	border: 1px solid black;
	height: 1.275rem;
	transition: top 0.2s, height 0.14s linear 0.06s;
}

input[type=radio]:hover::after {
	border: 1px solid black;
}


/*
.color_picker .area {
	background-color: hsl(var(--color-picker-hue), 100%, 100%);
	background: linear-gradient(top,
			hsl(0, 0%, 100%) 0%,
			hsla(0, 0%, 100%, 0) 50%,
			hsla(0, 0%, 0%, 0) 50%,
			hsl(0, 0%, 0%) 100%),
		linear-gradient(left,
			hsl(0, 0%, 50%) 0%,
			hsla(0, 0%, 50%, 0) 100%);
}

.color_picker .alpha {
	background: linear-gradient(left,
		hsl())
}
*/
